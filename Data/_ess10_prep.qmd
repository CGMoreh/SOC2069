
# European Social Survey, Round 10, 2020 (ESS10)

This dataset comes from the [European Social Survey (ESS Round 10 - 2020)](https://ess-search.nsd.no/en/study/172ac431-2a06-41df-9dab-c1fd8f3877e7). The raw data (ESS10 - integrated file, edition 3.1, in SPSS format) and documentation was downloaded from the ESS repository to a local folder, `Data/raw/ess10/`:

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false

fs::dir_info("../Data/raw/ess10")[, c(1,3)] |> flextable::qflextable() |> flextable::fontsize(size = 10)

```

The SOC2069 version of the dataset can be reproduced from the raw data file with the `R` code shown in the expandable field below.

```{r}
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: "Show the code"

## Packages (install first if needed) ----------------------------------------------------------------------------------------

library(here)           # Write paths to data relative to project directory on both Win and Mac
library(dplyr)          # Data wrangling
library(datawizard)     # All data import, export and wrangling
library(sjlabelled)     # Data import and label management

## Path to file --------------------------------------------------------------------------------------------------------------

datafile <- here("Data", "raw", "ess10", "ESS10.zip")

## Read in the data file with sjlabelled::read_spss() ------------------------------------------------------------------------

ess10 <- sjlabelled::read_spss(datafile) |> 
  drop_labels() |>
  mutate(across(where(~ is.factor(.x) && nlevels(.x) > 9), 
              as_numeric),                                        # Turn long factors to labelled numeric
         across(c(cntry, prtcldgb, rlgdngb), 
              as_factor)) |>                                      # Long factors that should stay categorical
  data_select(-c(name:idno, dweight:psu,
                 prtvtebe:prtvtdgb, prtclebe:prtclesk, rlgdnach:rlgdnbsk,
                 rlgblge:rlgdegb, dscrrce:dscrna, cntbrthd:lnghom2,
                 fbrncntc, mbrncntc, admrclc:vteubcmb, chpldmi:impdeme,
                 gndr2:gndr12, yrbrn2:rshpsgb, marsts:marstgb, edulvlb:edagegb,
                 mainact, crpdwk, pdjobyr, emplno:iorgact, nacer2, isco08,
                 uemp12m, uemp5yr, edulvlpb:isco08p, wkhtotp:region,
                 accref:fampdf, gndro12a:c19mco12, trdawrk:mcwrkhom,
                 testii1:testii9, admc19:domain)
              )


## Save the dataset for SOC2069 --------------------------------------------------------------------------------------

saveRDS(ess10, "for_analysis/ess10.rds", compress = "bzip2")

```



```{r ESS TESTING}
#| eval: false
#| echo: false

#### ========= TESTING ==================================================== ####
  
  
ess10dw |> describe_distribution(nwspol)
ess10sj |> describe_distribution(nwspol)

  
  

# ess10v2 |> mutate(across(where(is.factor), as.numeric)) |>  
  # describe_distribution(centrality = c("mode"))


ess10dw     |> data_tabulate(c(netusoft))
ess10dwimp  |> data_tabulate(c(netusoft))

ess10dw2    |> data_tabulate(c(netusoft))
ess10dw2imp |> data_tabulate(c(netusoft))


ess10sjimp     |> data_tabulate(c(netusoft))
  # mutate(netusoft = as_factor(as_label(netusoft))) |>


ess10sj     |> 
  sjmisc::frq(netusoft)


ess10sjimp  |> data_tabulate(c(netusoft))



ess10dw2rdsx |>   
                # mutate(across(where(is.factor),
                # as_numeric) |>
                # as_factor()) |> 
  data_select(c(netusoft, trstprl, agea)) |> 
  data_codebook(variable_label_width = 55, 
                  value_label_width = 30,
                  max_values = 10,
                  range_at = 5)


fs::dir_create(here("Data", "test"))

data_write(ess10dw, "test/ess10dw.rds")
data_write(ess10dw2, "test/ess10dw2.rds")
data_write(ess10sj, "test/ess10sj.rds")

sjlabelled::write_spss(ess10sj, "test/ess10sj.sav")

ess10dwimp <- data_read(here("Data", "test", "ess10dw.sav"))
ess10dw2imp <- data_read(here("Data", "test", "ess10dw2.sav"))
ess10sjimp <- read_spss(here("Data", "test", "ess10sj.sav"))

ess10dwrds <- data_read(here("Data", "test", "ess10dw.rds"))
ess10dw2rdsx <- data_read(here("Data", "test", "ess10dw2.rds"), convert_factors = FALSE)
ess10sjrds <- data_read(here("Data", "test", "ess10sj.rds"))




ess10sjrds |> sjmisc::frq(netusoft)


```



If you use the ESS10 data in your work, cite it as follows:

 > European Social Survey European Research Infrastructure (ESS ERIC). (2023). ESS10 integrated file, edition 3.1 [Data set]. Sikt - Norwegian Agency for Shared Services in Education and Research. https://doi.org/10.21338/ess10e03_1
 
 
 
## ESS10 variable search

```{r}
#| echo: false
#| message: false
#| warning: false
#| eval: true


d <- readRDS("for_analysis/ess10.rds") |> select(-gndr13)                        # empty!

Levels <- c()
for (i in names(d)) {
  Levels <- c(Levels, nlevels(as_factor(d[[i]])))
}
  
searchtable <- data_codebook(d) |>  
  select(-c(1, 6:10)) |> 
  filter(Name != "") |>
  rename(`N (%) missing` = Missings) |>
  mutate(Levels = Levels) |>
  relocate(Levels, .after = Type)

searchtable |> datatable(rownames = TRUE,
            extensions = 'FixedHeader',
            options = list(columnDefs = list(list(width = "50%", targets = "Label")),
                           pageLength = 10,
                           lengthMenu = c(5, 20, 50, nrow(searchtable)),
                           fixedHeader = TRUE,
                           headerCallback = DT::JS(                               # https://github.com/rstudio/DT/issues/783
                              "function(thead) {",
                              "  $(thead).css('font-size', '0.9em');",
                              "}"
                            ))) |>
  formatStyle(columns = colnames(searchtable), fontSize = '85%')

```




## ESS10 codebook

<details>
  <summary><i>View the full codebook</i></summary>

```{r}
#| echo: false
#| message: false
#| warning: false

`SOC2069: European Social Survey, Round 10` <- d


`SOC2069: European Social Survey, Round 10` |>  
    data_codebook(variable_label_width = 50, 
                  value_label_width = 45,
                  max_values = 10,
                  range_at = 5) |> 
    print_html(font_size = "80%",
               line_padding = 0)
```

</details>


