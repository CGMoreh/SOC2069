---
format:
  html: 
    embed-resources: false
css: "./../Materials/Labs/labcss.css"
---

# World Values Survey, Wave 7 (WVS7)

This dataset comes from the [World Values Survey Wave 7 (2017-2022)](https://www.worldvaluessurvey.org/WVSDocumentationWV7.jsp). The raw data (version 5.0, in SPSS format) and documentation was downloaded to a local folder, `Data/raw/wvs7/`:

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false

# The folder, which also contains the original data documentation, looks like this:

fs::dir_info("../Data/raw/wvs7")[, c(1,3)] |> flextable::qflextable() |> flextable::fontsize(size = 10)

```

The SOC2069 version of the dataset can be reproduced from the raw data file with the `R` code shown in the expandable field below.

```{r}
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: "Show the code"

## Packages (install first if needed) ----------------------------------------------------------------------------------------

library(here)           # Write paths to data relative to project directory on both Win and Mac
library(dplyr)          # Data wrangling
library(datawizard)     # All data import, export and wrangling
library(sjlabelled)     # Data import and label management

## Path to file --------------------------------------------------------------------------------------------------------------

datafile <- here("Data", "raw", "wvs7", "F00010733-WVS_Cross-National_Wave_7_spss_v5_0.zip")

## Read in the data file -----------------------------------------------------------------------------------------------------

wvs7 <- read_spss(datafile) |> 
  drop_labels() |> 
  mutate(across(where(~ is.factor(.x) && nlevels(.x) > 7), 
                as_numeric),                                        # Turn long factors to labelled numeric
         across(c(B_COUNTRY, Q272, Q275:Q287, Q289), 
                as_factor)) |>                                      # Long factors that should stay categorical
  set_labels(Q270, Q274, labels = "") |>                            # Pure numeric, no labels needed
  data_select(select = c(B_COUNTRY, G_TOWNSIZE, H_SETTLEMENT,
                         H_URBRURAL,                                # Technical variables
                         Q1:Q259,                                   # Core variables
                         Q260:Q290),                                # Demographic and socio-economic variables
              exclude = c(Q82_AFRICANUNION:Q82_UNDP,                # Exclude: region specific,
                          Q91:Q93,                                  # knowledge test,
                          Q266:Q268, Q272, Q290)) |>                # too detailed
  data_select(exclude = c(ends_with("R", "A", "CS9"),               # recoded, country-specific
                          contains("Q223", "X00", "V00")))



## Save the dataset for SOC2069 --------------------------------------------------------------------------------------

# rds
saveRDS(wvs7, "for_analysis/wvs7.rds", compress = "bzip2")

# spss
wvs7 |> labels_to_levels() |> data_write("for_analysis/wvs7.sav", compress = TRUE)


```


```{r TESTING}
#| echo: false
#| eval: false

### Testing ====================================================================

w1 <- data_read(datafile)                               # no numeric values for factors (?); original 0 values turned 1
w2 <- data_read(datafile, convert_factors = FALSE)      # turns all factors to numeric

w3 <- sjlabelled::read_spss(datafile)                   # keeps original 0 and adds labels

w4 <- data_read(datafile) |> 
  mutate(across(where(is.factor),
                as_numeric) |>
                as_factor())

w5 <- data_read(datafile) |> 
  mutate(across(where(is.factor),
                as_numeric) |>
                as_label())

# Works!
w6 <- w3 |> 
  mutate(across(where(~ is.factor(.x) && nlevels(.x) > 7), as_numeric))



# wvs7 |> 
wvs7 |> data_select(c(Q1, Q48, Q90, Q242, Q262)) |> 
  # mutate(Q242 = as_numeric(Q242)) |> 
      # dplyr::mutate(dplyr::across(dplyr::where(is.factor),
      #             sjlabelled::as_numeric) |>
      #             sjlabelled::as_factor()) |>
      data_codebook(variable_label_width = 30, 
                    value_label_width = 25,
                    max_values = 10,
                    range_at = 5) 
# |> 
#       print_html(font_size = "80%",
#                  line_padding = 0,
#                  title = "")



w1 |> data_tabulate(Q242)
w2 |> data_tabulate(Q242)
w3 |> data_tabulate(Q242)
w4 |> data_tabulate(Q242)
w6 |> data_tabulate(Q1)


w1 |> sjmisc::frq(Q242)
w2 |> sjmisc::frq(Q242)
w3 |> sjmisc::frq(Q242)
w4 |> sjmisc::frq(Q242)
w5 |> sjmisc::frq(Q242)
w6 |> sjmisc::frq(Q1)

wlab2 |> sjmisc::frq(Q242)

table(w6$Q242)



# Mutate / modify variables


m <- read_spss(datafile) |> 
  drop_labels() |> 
  select(Q1, Q242, B_COUNTRY) |> 
  mutate(across(where(~ is.factor(.x) && nlevels(.x) > 7), 
                as_numeric),                                  
         B_COUNTRY = as_character(B_COUNTRY))                                       


n <- read_spss(datafile) |> 
  drop_labels() |> 
  select(Q1, Q242, B_COUNTRY)  |> 
  mutate(across(where(is.factor), 
                as_numeric) |>
                as_label(),
         B_COUNTRY = as_character(B_COUNTRY))  
 


## dplyr
m |> 
  mutate(
    # Q1 = as.numeric(Q1),
    Q1 = case_match(Q1, "4" ~ "0",
                    .default = Q1)) |>        # dplyr functions remove the labels
  copy_labels(m) |>                           # sjlabelled::copy_labels adds labels back, but doe not recognise the recode
  sjmisc::frq(Q1)


n |> 
  mutate(Q1 = case_match(Q1, "Not at all important" ~ "Zero import", .default = Q1)) |>
  # mutate(Q1 = case_match(Q1, "4" ~ "0", .default = Q1)) |> 
  # mutate(Q1 = as.numeric(Q1)) |> 
  # mutate(Q1 = case_match(Q1, 4 ~ 0, .default = Q1)) |> 
sjmisc::frq(Q1)






## datawizard::recode values

m |> recode_values(Q1,
                   recode = list(`0` = 4)) |>   # same as dplyr; labels are removed; works with "" too (?)
  sjmisc::frq(Q1)


n |> recode_values(Q1,
                   recode = list("Zero import" = "Not at all important")) |>
  sjmisc::frq(Q1)




### Similar approach to dplyr `case_when()`


recode_into(Q1 == 4 ~ 0,
            data = m) |> 
  
  sjmisc::frq(m$Q1)


n |> recode_values(Q1,
                   recode = list("Zero import" = "Not at all important")) |>
  sjmisc::frq(Q1)





# Tabulations

m |> 
  # labels_to_levels(Q1) |> 
  sjmisc::frq(Q1, 
                 # Q242
                 )


m |> data_tabulate(Q1)



n |> sjmisc::frq(Q1, 
                 # Q242
                 )


n |> data_tabulate(Q1)



m |>   mutate(across(where(is.factor), 
                as_numeric) |>
                # as_label()
                datawizard::to_factor()
              ) |> 
  sjmisc::frq(Q1, Q242)


p$Q1 <- ordered(n$Q1)





## Saving formats

wvs7 |> 
  labels_to_levels() |>                   # otherwise the values are turned into labels
  data_write("test/wvs73.sav")

saveRDS(wvs7, "test/wvs7.rds")

sjlabelled::write_spss(wvs7, "test/wvs72.sav", compress = TRUE)


# Reloading saved data

a <- datawizard::data_read("test/wvs72.sav")
b <- sjlabelled::read_spss("test/wvs72.sav")
c <- readRDS("Data/test/wvs7.rds")



```



If you use the WVS7 data in your work, cite it as follows:

  > Haerpfer, C., Inglehart, R., Moreno, A., Welzel, C., Kizilova, K., Diez-Medrano J., M. Lagos, P. Norris, E. Ponarin & B. Puranen (eds.). 2022. World Values Survey: Round Seven - Country-Pooled Datafile Version 5.0. Madrid, Spain & Vienna, Austria: JD Systems Institute & WVSA Secretariat. doi:10.14281/18241.20




## WVS7 variable search

```{r}
#| echo: false
#| message: false
#| warning: false
#| eval: true

d <- readRDS("D:/GitHub/SOC2069/Data/for_analysis/wvs7.rds")

Levels <- c()
for (i in names(d)) {
  Levels <- c(Levels, nlevels(as_factor(d[[i]])))
}
  
# labs <- sjlabelled::get_label(d)

searchtable <- data_codebook(d) |>  
  select(-c(1, 6:10)) |> 
  filter(Name != "") |> 
  rename(`N (%) missing` = Missings) |>
  mutate(Levels = Levels) |>
  relocate(Levels, .after = Type)

searchtable |> datatable(rownames = TRUE,
            extensions = c('Scroller', 'FixedHeader'),
            options = list(columnDefs = list(list(width = "50%", targets = "Label")),
                           # deferRender = TRUE,
                           # scrollY = 400,
                           # scroller = TRUE,
                           pageLength = 10,
                           lengthMenu = c(5, 20, 50, nrow(searchtable)),
                           fixedHeader = TRUE,
                           headerCallback = DT::JS(                               # https://github.com/rstudio/DT/issues/783
                              "function(thead) {",
                              "  $(thead).css('font-size', '0.9em');",
                              "}"
                            )
                           )
            ) |>
  formatStyle(columns = colnames(searchtable), fontSize = '85%')

```





## WVS7 codebook

<details>
  <summary><i>View the full codebook</i></summary>

```{r}
#| echo: false
#| message: false
#| warning: false
#| eval: true

`SOC2069: World Values Survey, Wave 7` <- d

`SOC2069: World Values Survey, Wave 7`  |> 
    data_codebook(variable_label_width = 50, 
                  value_label_width = 45,
                  max_values = 10,
                  range_at = 6) |> 
  print_html(font_size = "80%", 
             line_padding = 0,
             table.width = "100%")
```

</details>

